version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: flatirons-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flatirons
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flatirons-network
  
  redis:
    image: redis:7-alpine
    container_name: flatirons-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
    networks:
      - flatirons-network
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flatirons-backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=flatirons
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    restart: always
    networks:
      - flatirons-network
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flatirons-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3000
    restart: always
    networks:
      - flatirons-network

networks:
  flatirons-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 